# microservice specific routes
GET        /assets/*file                              controllers.Assets.versioned(path="/public", file: Asset)

GET        /                                          controllers.AdminController.approvalSummaries

GET        /2i-review/:id                             controllers.TwoEyeReviewController.approval(id)
POST       /2i-review/:id                             controllers.TwoEyeReviewController.onSubmit(id)

GET        /2i-page-review/:id/*url                   controllers.TwoEyePageReviewController.onPageLoad(id: String, url: String, index: Int)
POST       /2i-page-review/:id/*url                   controllers.TwoEyePageReviewController.onSubmit(id: String, url: String, title: String, index: Int)

GET        /fact-check-page-review/:id/*url           controllers.FactCheckPageReviewController.onPageLoad(id: String, url: String, index: Int)
POST       /fact-check-page-review/:id/*url           controllers.FactCheckPageReviewController.onSubmit(id: String, url: String, title: String, index: Int)

GET        /fact-check/:id                            controllers.FactCheckController.approval(id)
GET        /fact-check-result/:id                     controllers.FactCheckConfirmController.onConfirm(id)

GET        /accessibility                             controllers.AccessibilityStatementController.getPage

GET        /timescales/data                           controllers.TimescalesController.getData
GET        /timescales                                controllers.TimescalesController.timescales
POST       /timescales                                controllers.TimescalesController.upload

POST       /process/scratch                           controllers.apis.ScratchController.submitScratchProcess
OPTIONS    /process/scratch                           controllers.apis.ScratchController.scratchProcessOptions

POST       /process/approval/2i-review                controllers.apis.ApprovalController.submitFor2iReview
OPTIONS    /process/approval/2i-review                controllers.apis.ApprovalController.options

POST       /process/approval/fact-check               controllers.apis.ApprovalController.submitForFactCheck
OPTIONS    /process/approval/fact-check               controllers.apis.ApprovalController.options

GET        /unpublish/:id/                            controllers.ArchiveController.unpublish(id)
POST       /unpublish/:id/:code                       controllers.ArchiveController.archive(id, code)

GET        /designer-admin                            controllers.StrideAdminController.listPublished
GET        /designer-admin/published                  controllers.StrideAdminController.listPublished
GET        /designer-admin/published/:processCode     controllers.StrideAdminController.getPublished(processCode: String)
GET        /designer-admin/approvals                  controllers.StrideAdminController.listApprovals
GET        /designer-admin/approvals/:processCode     controllers.StrideAdminController.getApproval(processCode: String)
GET        /designer-admin/archived                   controllers.StrideAdminController.listArchived
GET        /designer-admin/archived/:id               controllers.StrideAdminController.getArchived(id)
GET        /designer-admin/active                     controllers.StrideAdminController.listActive
GET        /designer-admin/active/:id/:version        controllers.StrideAdminController.getActive(id: String, version: Long, timescalesVersion: Option[Long] ?= None, ratesVersion: Option[Long] ?= None)


GET        /admin                                     controllers.ProcessAdminController.listPublished
GET        /admin/published                           controllers.ProcessAdminController.listPublished
GET        /admin/published/:processCode              controllers.ProcessAdminController.getPublished(processCode: String)
GET        /admin/approvals                           controllers.ProcessAdminController.listApprovals
GET        /admin/approvals/:processCode              controllers.ProcessAdminController.getApproval(processCode: String)
GET        /admin/archived                            controllers.ProcessAdminController.listArchived
GET        /admin/archived/:id                        controllers.ProcessAdminController.getArchived(id)
GET        /admin/active                              controllers.ProcessAdminController.listActive
GET        /admin/active/:id/:version                 controllers.ProcessAdminController.getActive(id: String, version: Long, timescalesVersion: Option[Long] ?= None, ratesVersion: Option[Long] ?= None)

GET        /admin/sign-in                             controllers.ProcessAdminController.signIn
POST       /admin/sign-in                             controllers.ProcessAdminController.submitSignIn
GET        /admin/sign-out                            controllers.ProcessAdminController.signOut

->         /hmrc-frontend           hmrcfrontend.Routes
